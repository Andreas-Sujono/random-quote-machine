{"version":3,"sources":["components/quote.js","index.js"],"names":["Quote","state","data","isLoading","chosen","quote","character","color","classList","getRandomQuote","bind","fetch","then","response","json","setState","console","log","index","Math","floor","random","this","length","className","style","backgroundColor","transition","href","onClick","Component","ReactDOM","render","Fragment","document","getElementById"],"mappings":"6OAGqBA,E,YAEpB,aAAc,IAAD,8BACZ,+CACKC,MAAQ,CACZC,KAAO,GACPC,WAAU,EACVC,OAAO,CACNC,MAAM,4HACNC,UAAU,mBACVC,MAAM,WAEPA,MAAM,CAAC,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,WAC7EC,UAAU,IAEX,EAAKC,eAAiB,EAAKA,eAAeC,KAApB,gBAbV,E,iFAiBO,IAAD,OAClBC,MAAM,sDAAD,OArBG,KAsBPC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAM,SAAAC,GAAQ,OACd,EAAKE,SACJ,CACCb,KAAOW,EACPV,WAAU,S,uCAOba,QAAQC,IAAI,WACZ,IAAIC,EAAQC,KAAKC,MAnCT,GAmCeD,KAAKE,UAC5BC,KAAKP,SACJ,CACCX,OAAQ,CACPC,MAAOiB,KAAKrB,MAAMC,KAAKgB,GAAOb,MAC9BC,UAAWgB,KAAKrB,MAAMC,KAAKgB,GAAOZ,UAClCC,MAAMe,KAAKrB,MAAMM,MAAMY,KAAKC,MAAMD,KAAKE,SAASC,KAAKrB,MAAMM,MAAMgB,SACjEf,UAAU,c,+BAOb,OACC,yBAAKgB,UAAS,cAASF,KAAKrB,MAAMO,WAAaiB,MAAO,CAACC,gBAAgBJ,KAAKrB,MAAMG,OAAOG,MAAMoB,WAAW,WAEzG,yBAAKH,UAAU,YAEbF,KAAKrB,MAAME,UAAY,0CAAsB,KAE9C,yBAAKqB,UAAS,gBAAWF,KAAKrB,MAAMO,WAAaiB,MAAO,CAAClB,MAAMe,KAAKrB,MAAMG,OAAOG,MAAMoB,WAAW,WACjG,2BAAG,wCAAeL,KAAKrB,MAAMG,OAAOC,MAAMiB,KAAKrB,MAAMG,OAAOC,MAAM,KAAlE,MAED,yBAAKmB,UAAS,oBAAeF,KAAKrB,MAAMO,WAAaiB,MAAO,CAAClB,MAAMe,KAAKrB,MAAMG,OAAOG,MAAMoB,WAAW,WAAtG,MAAqHL,KAAKrB,MAAMG,OAAOE,UAAvI,KACA,yBAAKkB,UAAU,UAAUC,MAAO,CAAClB,MAAMe,KAAKrB,MAAMG,OAAOG,QAAzD,IAAkE,uBAAGqB,KAAK,IAAIJ,UAAU,gBAAgBC,MAAO,CAAClB,MAAMe,KAAKrB,MAAMG,OAAOG,MAAMoB,WAAW,aACzJ,yBAAKH,UAAU,UAAf,IAAyB,4BAAQK,QAASP,KAAKb,eAAgBgB,MAAO,CAACC,gBAAgBJ,KAAKrB,MAAMG,OAAOG,MAAMoB,WAAW,WAAjG,aAAzB,MAGD,yBAAKH,UAAU,UACd,2DACA,yBAAKC,MAAO,CAAClB,MAAM,cAAnB,0B,GAjE8BuB,a,MCEnCC,IAASC,OACR,kBAAC,IAAMC,SAAP,KACC,kBAAC,EAAD,OAEDC,SAASC,eAAe,U","file":"static/js/main.37279595.chunk.js","sourcesContent":["import React, {Component} from 'react'\n\nlet num = 10;\nexport default class Quote extends Component{\n\t\n\tconstructor(){\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tdata : [],\n\t\t\tisLoading:true,\n\t\t\tchosen:{\n\t\t\t\tquote:'If you hear a voice within you say “you cannot paint,” then by all means paint and that voice will be silenced.',\n\t\t\t\tcharacter:'Vincent Van Gogh',\n\t\t\t\tcolor:'#27ad60'\n\t\t\t},\n\t\t\tcolor:['#27ad60','#74a757','#9b59b6','#f39c12','#fb6965','#14a085','#d9c2b5','#2b3e50'],\n\t\t\tclassList:''\n\t\t}\n\t\tthis.getRandomQuote = this.getRandomQuote.bind(this);\n\n\t}\n\n\tcomponentDidMount(){\n\t\tfetch(`https://thesimpsonsquoteapi.glitch.me/quotes?count=${num}`)\n\t\t.then(response => response.json())\n\t\t.then( response =>\n\t\t\tthis.setState(\n\t\t\t\t{\n\t\t\t\t\tdata : response,\n\t\t\t\t\tisLoading:false\n\t\t\t\t}\n\t\t\t)\n\t\t)\n\t}\n\n\tgetRandomQuote(){\n\t\tconsole.log('clicked')\n\t\tlet index = Math.floor(Math.random()  * num);\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\tchosen: {\n\t\t\t\t\tquote: this.state.data[index].quote,\n\t\t\t\t\tcharacter: this.state.data[index].character,\n\t\t\t\t\tcolor:this.state.color[Math.floor(Math.random()*this.state.color.length)],\n\t\t\t\t\tclassList:'active'\n\t\t\t\t}\n\t\t\t}\n\t\t)\n\t}\n\n\trender(){\n\t\treturn(\n\t\t\t<div className={`box ${this.state.classList}`} style={{backgroundColor:this.state.chosen.color,transition:'all 2s'}}>\n\t\t\t\t\n\t\t\t\t<div className=\"quoteBox\">\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.state.isLoading ? <div> Loading </div>: null\n\t\t\t\t\t}\n\t\t\t\t\t<div className={`quote ${this.state.classList}`} style={{color:this.state.chosen.color,transition:'all 1s'}}> \n\t\t\t\t\t\t<i><span>“</span>{this.state.chosen.quote?this.state.chosen.quote:null} </i>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={`character ${this.state.classList}`} style={{color:this.state.chosen.color,transition:'all 1s'}}> - {this.state.chosen.character} </div>\n\t\t\t\t\t<div className=\"twitter\" style={{color:this.state.chosen.color}}> <a href=\"#\" className=\"fa fa-twitter\" style={{color:this.state.chosen.color,transition:'all 1s'}}></a></div>\n\t\t\t\t\t<div className=\"button\"> <button onClick={this.getRandomQuote} style={{backgroundColor:this.state.chosen.color,transition:'all 1s'}}>New quote</button> </div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"footer\">\n\t\t\t\t\t<div> Desgined and Created By: </div>\n\t\t\t\t\t<div style={{color:'lightblue'}}> Andreas Sujono </div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\n\n\n\n\n\n\n\n\n\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport Quote from './components/quote.js'\nimport './index.css'\n\nReactDOM.render(\n\t<React.Fragment>\n\t\t<Quote />\n\t</React.Fragment>,\n\tdocument.getElementById('root')\n);"],"sourceRoot":""}